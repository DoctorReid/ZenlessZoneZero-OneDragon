## 基础信息 ##
author: "遥酱"
thanks: "火"
homepage: "https://github.com/kawayiYokami/ZenlessZoneZero-OneDragon"
version: "3.1"
team_list: []

introduction: "支持全角色 任意三人/单人/双人作战，通杀所有情况，有问题去主页发需求"


#动作模板
  #所有的operation_template 都可以在config目录下的auto_battle_operation文件夹内找到对应名字的文件

  #需要注意的是，每一个动作模板，都应该详细测定动作用时，无敌时间，根据预输入设定按键时机和合轴时刻，还有这个动作会上的个人BUFF

#状态模板
  #所有的state_template 都可以在config目录下的auto_battle_state_handler文件夹内找到对应名字的文件
  #一般情况下根据角色状态选择动作模板必须包含如下状态
    #红光
    #黄光
    #连携
    #支援
    #失衡期间
    #非失衡期间

  #特别的状态模板介绍
  #支援攻击模板-特殊情况：  这里写是特殊的角色在遇到黄光时不进行支援的
  #血量扣减模板-切人终结技：这里写的是角色在受伤时，切到有终结技的队友释放终结技保命，需要注意的是，如果你希望有角色存终结技保人，请在那个角色的模板下面写上不掉血不放终结技
  #速切补增益模板-全角色：  合轴时刻触发，选择一个满足条件的队友进行合轴
  #特殊情况-紧急切人：      非合轴时刻，在角色完成一套动作之后，检测是否需要换人
  #速切模板-全角色：        所有角色的总模板，每个角色一个文件封装好，这样不会乱，需要新增角色只要在这里加入那个角色的模板即可

#触发器
  #triggers代表触发器，更高优先级的触发器触发的时候，如果满足状态可以打断低优先级的触发器，比如闪避识别优先级为99，可以打断其他所有比99小的触发器动作
  #一般情况下，闪避＞连携＞快速支援＞扣血＞合轴＞主线程
  #因为同一个触发器内不管触发多少次都不会打断本触发器，所以所有角色的默认动作都放在同一个触发器内，就不用怕打断动作导致错位了


check_dodge_interval: 0.02  #闪避识别间隔
check_agent_interval: 0.1   #代理人识别间隔
check_chain_interval: 0.1   #连携识别间隔
check_quick_interval: 0.2   #快速支援识别间隔
auto_lock_interval: 0.5     #锁定间隔
auto_turn_interval: 2       #镜头转向间隔

scenes:
  #这部分是用来识别闪光闪避的，这里不需要更改，哪怕角色更新也不需要动
  - triggers: ["闪避识别-黄光", "闪避识别-红光", "闪避识别-声音"] 
    priority: 99
    handlers:
      #这里的动作不打断，代表了动作的无敌时间，一般无敌动作期间，动作是无法打断的，0.3是因为闪光会比伤害先出现0.3秒
      - states: "![自定义-动作不打断,-10,-0.3]" 
        sub_handlers:

          #连携期间，如果有闪光，说明连携的是小怪，放弃连携模式，不然主C可能被打死
          - states: "[自定义-连携换人,0,12]" 
            operations:
              - op_name: "清除状态"
                state_list: ["自定义-连携换人"]
              - op_name: "设置状态"
                state: "自定义-动作不打断"
                seconds: 1
              - operation_template: "通用-闪避-左"
              - op_name: "按键-普通攻击"
                post_delay: 0.1
                repeat: 10

          #正常情况下，黄光进入的判定，一般情况下，按顺序触发
          - states: "[闪避识别-黄光]" 
            sub_handlers:
              - state_template: "支援攻击模板-特殊情况" #特殊情况
              - state_template: "支援攻击模板-击破" #格挡攻击优先击破可以快速打进失衡
              - state_template: "支援攻击模板-防护" #防护一般格挡性能优越
              - state_template: "支援攻击模板-异常" #异常一般格挡上异常效率也不错
              - state_template: "支援攻击模板-下一个" #剩下的都不优秀了
          #除了看到黄色闪光都进入闪A模式
          - states: ""
            sub_handlers:
              #一般情况下里面都是直接设置红光闪避状态，不要在里面写闪A动作，因为同一个触发器无法打断本触发器，可能导致闪A中无法闪A
              - state_template: "闪A模板-全角色" 

  - triggers: ["按键可用-连携技"]
    priority: 98
    handlers:
      - states: "[按键可用-连携技]"
        sub_handlers:
          #详情可以打开状态模板
          - state_template: "连携模板-通用" 

  - triggers: ["按键可用-快速支援"]
    priority: 97
    interval: 0.1
    handlers:
      #详情可以打开状态模板
      - state_template: "快速支援模板-全角色" 

  - triggers: ["前台-血量扣减"]
    priority: 90
    interval: 0.2
    handlers:
      - states: "[前台-血量扣减]{1, 100} & ![自定义-动作不打断,0,30]"
        sub_handlers:
          #有些角色会留着终结技来打断BOSS的攻击，因为有些攻击是没有闪光的，但是终结技可以打断敌人避免受伤
          - state_template: "血量扣减模板-切人终结技"
          #挨打了可以打断主线程操作马上进行闪避躲避接下来的攻击
          - state_template: "闪A模板-全角色"

  - triggers: ["自定义-速切结束"]
    priority: 80
    interval: 0.2
    handlers:
      #这边是主线程的动作流程中，设置了状态速切结束，代表可以尝试进行合轴，如果有角色满足出场条件，就会进行合轴。
      #具体合轴情况打开状态模板看条件
      - state_template: "速切补增益模板-全角色"

  - triggers: []
    priority: 9
    interval: 0.02
    handlers:
      # 刚开始未识别到角色时候不要乱切
      - state_template: "站场模板-未识别角色"

      #切人之后先松开按键，否则容易出问题，因为闪避可能打断长按，导致原有动作的长按按键没有被松开，而0.2秒内松开不会有动作
      - states: "([按键-切换角色-下一个,0,0.2] | [按键-切换角色-上一个,0,0.2]) | [自定义-连携跳过,0,0.3]"
        operations:
          - op_name: "清除状态"
            state_list: ["自定义-速切结束", "自定义-动作不打断"]
          - op_name: "按键-普通攻击"
            way: "松开"
          - op_name: "按键-特殊攻击"
            way: "松开"
          - op_name: "等待秒数"
            seconds: 0.1

      #主线程默认情况会走到这里
      - states: ""
        sub_handlers:
          #这个代表，每个角色的动作做完之后，不进行合轴，也根据特殊情况进行切人，防止循环打乱
          - state_template: "特殊情况-紧急切人"
          #这里是全角色的状态模板，需要新增新角色模板打开这个文件添加，每个角色请封装在一个状态模板【state_template】内，增加稳定性
          - state_template: "速切模板-全角色"

